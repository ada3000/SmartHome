@using SH.Web.Models
@using Newtonsoft.Json
@{
    ViewBag.Title = "Stats";
}
@model List<GroupDisplayModel>
<br />

<div class="template js-panel-template">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title">{Name}<span class="badge headerDate">{CreateDate}</span></h3>
        </div>
        <div class="panel-body">
        </div>
    </div>
</div>

<div class="template js-progress-item">
    <div class="row"><div class="col-md-5">{TitleLeft}</div><div class="col-md-7 text-right">{TitleRight}</div></div>
    <div class="progress">
        <div class="progress-bar progress-bar-{style}" role="progressbar" style="width: 0%;">
            <span class="progressText">{TitlePersent}</span>
        </div>
    </div>
</div>

<div class="template js-text-item">
    <div class="row"><div class="col-md-4">{TitleLeft}</div><div class="col-md-8">:&nbsp;{TitleRight}</div></div>
</div>

<div class="row">
    <div class="col-md-4 js-col-1">

    </div>
    <div class="col-md-4">

    </div>
    <div class="col-md-4">

    </div>
</div>

@section scripts {
<script type="text/javascript">

    var panelsData = @Html.Raw(JsonConvert.SerializeObject(Model));

    function renderTemplate(template, obj)
    {
        var result = template;
        for(var i in obj)
            result = result.replace("{"+i+"}", obj[i] || "");

        return result;
    };

    $(document).ready(function()
    {
        var container = $(".js-col-1");

        var panelTemplate = $(".js-panel-template").html();
        var progressTemplate = $(".js-progress-item").html();
        var textTemplate = $(".js-text-item").html();

        for(var i=0;i<panelsData.length;i++)
        {
            var panel = panelsData[i];
            var createDate = new Date(panel.Create);

            panel.CreateDate = createDate.toLocaleDateString()+" "+createDate.toLocaleTimeString();

            var panelNode = $(renderTemplate(panelTemplate, panel)).appendTo(container);
            var panelBodyNode = $(".panel-body",panelNode);

            for(var sid=0;sid<panel.Data.length; sid++)
            {
                var sensorData = panel.Data[sid];
                sensorData.style = sensorData.IsError ? "primary":"danger";

                var template = sensorData.Type==10 ? progressTemplate: textTemplate;

                var sensorNode = $(renderTemplate(template, sensorData)).appendTo(panelBodyNode);
                sensorNode.find(".progress-bar").width(sensorData.PersentValue+"%");
            }
        }

    });
</script>
}